{"version":3,"sources":["config/firebase.js","containers/Home/index.js","store/action/index.js","containers/Chat/index.js","config/router.js","App.js","reportWebVitals.js","store/reducer/index.js","store/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Home","className","src","alt","onClick","props","facebook_login","history","React","Component","connect","state","users","dispatch","provider","auth","FacebookAuthProvider","signInWithPopup","then","result","credential","accessToken","user","create_user","name","displayName","email","profile","photoURL","uid","database","ref","child","set","type","payload","alert","push","catch","error","code","message","Chat","chat","setState","chat_user","current_user","merge_uid","uid_merge","get_messages","on","messages","chats","val","send_message","this","get_users","uid1","uid2","style","width","map","v","i","Object","keys","length","color","value","onChange","e","target","placeholder","data","AppRouter","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d0c8c70.chunk.js","sourcesContent":["import  firebase from 'firebase/app';\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBu0yUqdyL63lY672o5tWt_i_81Jv8Yvng\",\r\n  authDomain: \"techkaro-c9730.firebaseapp.com\",\r\n  databaseURL: \"https://techkaro-c9730.firebaseio.com\",\r\n  projectId: \"techkaro-c9730\",\r\n  storageBucket: \"techkaro-c9730.appspot.com\",\r\n  messagingSenderId: \"257407748843\",\r\n  appId: \"1:257407748843:web:c63f14a2695ef1500b4cae\",\r\n  measurementId: \"G-LC1588VS44\"\r\n};\r\n  firebase.initializeApp(firebaseConfig)\r\n  export default firebase ;\r\n ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { facebook_login } from '../../store/action'\r\nimport './style.css';\r\n\r\nclass Home extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"home\">\r\n                <img src=\"../../assets/chatImg.png\" alt=\"\" />\r\n                <h1>Chat-App</h1>\r\n\r\n                <button onClick={() => this.props.facebook_login(this.props.history)}>Facebook LogIn</button>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users\r\n})\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n    facebook_login: (history) => dispatch(facebook_login(history))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProp) (Home);\r\n","import firebase from '../../config/firebase'\r\nimport {useHistory} from 'react-router-dom';\r\nconst facebook_login = (history) => {\r\n    return (dispatch) =>{\r\n        var provider = new firebase.auth.FacebookAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n            var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n\r\n            let create_user = {\r\n                name: user.displayName,\r\n                email: user.email,\r\n                profile: user.photoURL,\r\n                uid: user.uid\r\n            }\r\n            firebase.database().ref('/').child(`users/${user.uid}`).set(create_user)\r\n            .then(()=>{\r\n                dispatch({type:\"SETUSER\" , payload:create_user})\r\n                alert(\"user login successful\")\r\n                history.push('/chat')\r\n            })\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            // ...\r\n          });\r\n    }\r\n\r\n}\r\n//to get data from firebase\r\nconst get_users = () => {\r\n    let users = [];\r\n    return (dispatch) =>{\r\n        firebase.database().ref('/').child('users').on('child_added',(data)=>{\r\n            users.push(data.val())\r\n        })\r\n        dispatch({ type:\"SETFIREBASEUSERS\", payload:users})\r\n    }\r\n}\r\n\r\n\r\nexport{\r\n    facebook_login, \r\n    get_users\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { get_users } from '../../store/action'\r\nimport firebase from '../../config/firebase'\r\nimport './style.css';\r\n\r\nclass Chat extends React.Component{\r\n\r\n    constructor() {\r\n        super()\r\n        this.state={\r\n            chat_user:{},\r\n            chats:[],\r\n            message:\"\"\r\n        }\r\n    }\r\n\r\n    chat=(user)=>{\r\n        this.setState({\r\n            chat_user:user\r\n        })\r\n        let current_user = this.props.current_user;\r\n        let merge_uid = this.uid_merge(current_user.uid , user.uid);\r\n        this.get_messages(merge_uid)\r\n        \r\n    }\r\n    get_messages = (uid) =>{\r\n        firebase.database().ref('/').child(`chats/${uid}`).on('child_added' ,(messages) => {\r\n            this.state.chats.push(messages.val())\r\n            this.setState({\r\n                chats: this.state.chats\r\n            })\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.props.get_users();\r\n    }\r\n\r\n    uid_merge(uid1 , uid2){\r\n        if(uid1 < uid2){\r\n            return uid1 + uid2;\r\n        }\r\n        else{\r\n            return uid2 + uid1\r\n        }\r\n    }\r\n    send_message = () =>{\r\n        let user = this.props.current_user;\r\n        let chat_user = this.state.chat_user;\r\n        let merge_uid = this.uid_merge(user.uid, chat_user.uid);\r\n        firebase.database().ref('/').child(`chats/${merge_uid}`).push({\r\n            message: this.state.message,\r\n            name: user.name,\r\n            uid: user.uid\r\n        });\r\n        this.setState({\r\n            message: \"\"\r\n        })\r\n    }\r\n    render(){\r\n        let user = this.props.current_user\r\n     \r\n        return(\r\n            <div className=\"info\">\r\n                <h4>Welcome {user.name}</h4>\r\n                <img src={user.profile} alt=\"\"/>\r\n                <h6>Email: {user.email}</h6>\r\n                <div className=\"chat_user-box\" >\r\n                    <div className=\"chat_user-sub-box1\" style={{width:400}}>\r\n                        <h4>Chat users:</h4>\r\n                        <ul>\r\n                            {this.props.users.map((v,i) =>{\r\n                                return v.uid !== user.uid && \r\n                                <li key={i}>\r\n                                <img src={v.profile} alt=\"\" width=\"20\" />\r\n                                {v.name}\r\n                                <button onClick={()=>this.chat(v)}>Chat</button></li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                     <div className=\"chat_user-sub-box2\" style={{width:400}}>\r\n                        <h4>Chat </h4>\r\n                        {Object.keys(this.state.chat_user).length ?\r\n                        <div>\r\n                            <h4><img src={this.state.chat_user.profile} alt=\"\" width=\"20\"/>\r\n                            {this.state.chat_user.name}</h4>\r\n\r\n                            <ul>\r\n                            {this.state.chats.map((v,i) =>{\r\n                                return <li style={{ color: v.uid === user.uid ? \"coral\" : \"lightblue\"}} key={i}>{v.message}</li>\r\n                            })}\r\n                            </ul>\r\n                        <input value={this.state.message} onChange={(e)=>this.setState({message: e.target.value})} type=\"text\" placeholder=\"enter your messege\"/>\r\n                        <button onClick={()=> this.send_message()}>Send</button>\r\n                     </div>\r\n                     :\r\n                     <h4>No User</h4>\r\n                        }   \r\n                    </div>\r\n                </div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    current_user: state.current_user,\r\n    users:state.users\r\n})\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n    get_users: () => dispatch (get_users())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProp) (Chat);\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, } from 'react-router-dom';\r\nimport Home from '../containers/Home'\r\nimport Chat from '../containers/Chat'\r\n\r\n\r\n\r\nclass AppRouter extends React.Component{\r\n    render(){\r\n        return(\r\n            <Router>\r\n                <Route exact path='/' component={Home} />\r\n                <Route exact path='/chat' component={Chat} />\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppRouter;","import React from 'react';\nimport AppRouter from './config/router'\nimport './App.css';\n\nclass App extends React.Component {\n    render(){\n        return (\n            <div>\n                <AppRouter />\n            </div>\n          );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\r\n    users: [],\r\n    current_user:{}\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"SETUSER\":\r\n            return({\r\n                ...state,\r\n                current_user: action.payload\r\n            })\r\n        case \"SETFIREBASEUSERS\":\r\n            return({\r\n                ...state,\r\n                users: action.payload\r\n            })\r\n    }\r\n    return state;\r\n}","import reducer from './reducer';\r\nimport { createStore , applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}